{"version":3,"sources":["components/ImageGrid.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageGrid","item","tags","tag","split","className","src","webformatURL","alt","user","views","likes","comments","downloads","map","index","ImageSearch","searchText","useState","text","setText","on","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","items","setItems","isLoading","setIsLoading","keyword","setKeyword","useEffect","fetch","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAiCeA,EA/BI,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAEdC,GAF8B,EAAVC,IAEbF,EAAKC,KAAKE,MAAM,MAC3B,OACI,sBAAKC,UAAU,kDAAf,UACA,qBAAKC,IAAKL,EAAKM,aAAcC,IAAI,SAASH,UAAU,+HACpD,sBAAKA,UAAU,YAAf,UACA,sBAAKA,UAAU,wCAAf,0BACcJ,EAAKQ,QAEnB,+BACE,qBAAIJ,UAAU,UAAd,UAAwB,sCAAxB,MAAwCJ,EAAKS,SAC7C,qBAAIL,UAAU,UAAd,UAAwB,sCAAxB,MAAwCJ,EAAKU,SAC7C,qBAAIN,UAAU,UAAd,UAAwB,yCAAxB,MAA2CJ,EAAKW,YAChD,qBAAIP,UAAU,UAAd,UAAwB,0CAAxB,MAA4CJ,EAAKY,mBAGnD,qBAAKR,UAAU,sBAAf,SACKH,EAAKY,KAAI,SAACX,EAAKY,GAAN,OACV,uBAAkBV,UAAU,kGAA5B,cAGIF,IAHOY,YCURC,EA7BK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACZC,qBADY,mBAC7BC,EAD6B,KACvBC,EADuB,KASpC,OACI,qBAAKf,UAAU,yCAAf,SACI,sBAAMgB,IAAE,EAACC,SARA,SAACC,GACdA,EAAEC,iBAEFP,EAAWE,IAKsBd,UAAU,kBAAvC,SACI,sBAAKA,UAAU,qDAAf,UACI,uBAAOA,UAAU,iIAEGoB,SAAU,SAAAF,GAAC,OAAIH,EAAQG,EAAEG,OAAOC,QACpDC,KAAK,OAAOC,YAAY,+BACxB,wBAAQxB,UAAU,wIAGCuB,KAAK,SAHxB,4BCuBLE,EAtCH,WAAO,IAAD,EAEQZ,mBAAS,IAFjB,mBAEXa,EAFW,KAEJC,EAFI,OAGgBd,oBAAS,GAHzB,mBAGXe,EAHW,KAGAC,EAHA,OAIYhB,mBAAS,IAJrB,mBAIXiB,EAJW,KAIFC,EAJE,KAiBhB,OAXFC,qBAAU,WACRC,MAAM,uDAAD,OAAwDH,EAAxD,kCACJI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJV,EAASU,EAAKC,MACdT,GAAa,MAEdU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAEzB,CAACV,IAGA,sBAAK9B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAa,SAACE,GAAD,OAAUiB,EAAWjB,OAE/Cc,GAA8B,IAAjBF,EAAMiB,QAAgB,oBAAI3C,UAAU,qCAAd,6BAIlC4B,EACD,oBAAI5B,UAAU,qCAAd,SACE,qBAAKC,IAAI,6DAA6DD,UAAU,UAAUG,IAAI,cAE9F,qBAAKH,UAAU,yBAAf,SACG0B,EAAMjB,KAAI,SAAAb,GAAI,OACb,cAAC,EAAD,CAAyBA,KAAMA,GAAfA,EAAKgD,a,MC7BjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.809e2efc.chunk.js","sourcesContent":["import React from 'react'\n\n const ImageGrid = ( {item, tag} ) => {\n\n  const tags = item.tags.split(\",\");\n    return (\n        <div className=\"max-w-md rounded overflow-hidden shadow-lg h-30\" >\n        <img src={item.webformatURL} alt=\"Random\" className=\"w-full transition duration-500 ease-in-out bg-blue-600 hover:bg-red-600 transform hover:-translate-y-1 hover:scale-110 ...\" />\n        <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-red-600 text-base mb-3\">\n        Clicked By : {item.user}\n        </div>\n        <ul>\n          <li className=\"text-sm\"><b>Views</b> : {item.views}</li>\n          <li className=\"text-sm\"><b>Likes</b> : {item.likes}</li>\n          <li className=\"text-sm\"><b>Comments</b> : {item.comments}</li>\n          <li className=\"text-sm\"><b>Downloads</b> : {item.downloads}</li>\n        </ul>\n        </div>\n        <div className=\"px-6 text-base py-4\">\n            {tags.map((tag, index) => (\n            <span key={index} className=\"inline-block mr-1 mt-1 bg-gray-200 \n            rounded-full px-2 py-1 text-sm font-semibold \n            text-gray-800\">\n              #{tag}\n         </span>\n\n            ))}\n        </div>\n      </div>\n    )\n}\n\nexport default ImageGrid\n","import React, { useState}  from \"react\";\n\nconst ImageSearch = ( {searchText} ) => {\n    const [text, setText] = useState()\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        searchText(text);\n    }\n\n    return(\n        <div className=\"max-w-md overflow-hidden my-12 mx-auto\">\n            <form on onSubmit={onSubmit} className=\"w-full max-w-md\">\n                <div className=\"flex items-center border-b-2 border-green-500 py-2\">\n                    <input className=\"appearance-none bg-transparent border-none \n                    outline-none w-full text-gray-700 mr-2 py-1 px-2 leading-tight \n                    focus:outline-none\" onChange={e => setText(e.target.value)} \n                    type=\"text\" placeholder=\"Type to Search Images.....\" />\n                    <button className=\"flex-shrink-0 bg-green-500 \n                    hover:bg-green-700 border-green-500 hover:border-green-700 \n                    text-sm border-4 text-white\n                    py-1 px-2 rounded\" type=\"submit\">\n                        Search \n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ImageSearch","import React, {useState, useEffect} from \"react\";\nimport ImageGrid from \"./components/ImageGrid\";\nimport ImageSearch from \"./components/ImageSearch\";\n\nconst App = () => {\n\nconst [items, setItems] = useState([]);\nconst [isLoading, setIsLoading] = useState(true);\nconst [keyword, setKeyword] = useState(\"\");\n\nuseEffect(() => {\n  fetch(`https://pixabay.com/api/?key=YOUR_PIXABAY_API_KEY&q=${keyword}&image_type=photo&pretty=true`)\n  .then(res => res.json())\n  .then(data => {\n    setItems(data.hits);\n    setIsLoading(false);\n  })\n  .catch(err => console.log(err));\n  \n}, [keyword])\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText= {(text) => setKeyword(text) } />\n\n    {!isLoading && items.length === 0 && <h1 className=\"text-4xl text-center mx-auto mt-32\">\n       No Images Found\n         </h1>}\n\n      {isLoading ? \n      <h1 className=\"text-6xl text-center mx-auto mt-32\">\n        <img src=\"https://c.tenor.com/I6kN-6X7nhAAAAAj/loading-buffering.gif\" className=\"mx-auto\" alt=\"Loading\"/>\n         </h1> : \n        <div className=\"grid grid-cols-4 gap-6\">\n          {items.map(item =>  (\n            <ImageGrid key={item.id} item={item} />\n          ))}\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/main.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}